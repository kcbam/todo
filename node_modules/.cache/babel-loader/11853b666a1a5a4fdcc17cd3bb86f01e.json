{"ast":null,"code":"var _jsxFileName = \"/Users/bamkadayat/Desktop/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport { isTemplateElement } from '@babel/types';\n\nclass ToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \" \",\n      list: [],\n      nameError: \"\"\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //copy of current list items\n\n    const list = [...this.state.list]; //add new item to list\n\n    list.push(newItem); //update state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    //delete item\n    const list = [...this.state.list]; //filter out item that being deleted\n\n    const updateList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updateList\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"exampleInputEmail1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Add an item..\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type item here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.addItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.nameError)), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.list.map(item => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item\",\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, item.value, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => this.deleteItem(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"X\"));\n    }))));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/bamkadayat/Desktop/todolist/src/App.js"],"names":["React","Component","ReactDom","isTemplateElement","ToDoList","constructor","props","state","newItem","list","nameError","updateInput","key","value","setState","addItem","id","Math","random","slice","push","deleteItem","updateList","filter","item","render","e","target","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport { isTemplateElement } from '@babel/types';\nclass ToDoList extends React.Component {\n  constructor(props){\n      super(props);\n      this.state= {\n        newItem:\" \",\n        list:[],\n        nameError:\"\",\n      }\n    }\n    updateInput(key,value){\n      //update react state\n      this.setState({\n        [key]:value\n      });\n\n    }\n    addItem(){\n      //create item with unique id\n      const newItem={\n        id: 1+ Math.random(),\n        value: this.state.newItem.slice()\n      };\n      \n      //copy of current list items\n      const list= [...this.state.list]\n      //add new item to list\n      list.push(newItem);\n      //update state with new list and reset newItem input\n      this.setState({\n        list,\n        newItem:\"\"\n      });\n    }\n    deleteItem(id){\n      //delete item\n      const list= [...this.state.list]\n      //filter out item that being deleted\n      const updateList = list.filter(item=>item.id !==id);\n      this.setState({list:updateList})\n    }\n    \n  render(){\n    return(\n      <div className=\"container\">\n          <div className=\"row\">      \n              <div className=\"form-group\">\n                <label for=\"exampleInputEmail1\">Add an item..</label>\n                  <input\n                      type=\"text\" className=\"form-control\"\n                      placeholder=\"Type item here\"\n                      value={this.state.newItem}\n                      onChange={e => this.updateInput(\"newItem\", e.target.value)}\n                    />\n                  <button className=\"btn btn-primary\" onClick={()=> this.addItem()}>\n                    Add\n                  </button>\n                  <br/>\n                  <div>{this.state.nameError}</div>\n              </div>\n              <ul className=\"list-group list-group-flush\">\n                {this.state.list.map(item => {\n                  return(\n                      <li className=\"list-group-item\" key={item.id}>{item.value}\n                        <button className=\"btn btn-danger\"\n                          onClick={()=> this.deleteItem(item.id)}\n                        >\n                          X\n                        </button>\n                      </li>\n                  )\n                })}\n              </ul>\n          </div>\n      </div>\n    );\n  }\n}\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}