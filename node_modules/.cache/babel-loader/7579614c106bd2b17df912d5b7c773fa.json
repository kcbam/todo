{"ast":null,"code":"var _jsxFileName = \"/Users/bamkadayat/Desktop/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport { isTemplateElement } from '@babel/types';\n\nclass ToDoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \" \",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //copy of current list items\n\n    const list = [...this.state.list]; //add new item to list\n\n    list.push(newItem); //update state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    //delete item\n    const list = [...this.state.list]; //filter out item that being deleted\n\n    const updateList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updateList\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Add an item..\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Type item here\",\n      value: this.state.newItem,\n      onChange: e => this.updateInput(\"newItem\", e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.addItem(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state.list.map(item => {\n      return React.createElement(\"li\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, item.value, React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: () => this.deleteItem(item.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"X\"));\n    })));\n  }\n\n}\n\nexport default ToDoList;","map":{"version":3,"sources":["/Users/bamkadayat/Desktop/todolist/src/App.js"],"names":["React","Component","ReactDom","isTemplateElement","ToDoList","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","id","Math","random","slice","push","deleteItem","updateList","filter","item","render","e","target","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AACA,MAAMC,QAAN,SAAuBJ,KAAK,CAACC,SAA7B,CAAuC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACVC,MAAAA,OAAO,EAAC,GADE;AAEVC,MAAAA,IAAI,EAAC;AAFK,KAAZ;AAID;;AACDC,EAAAA,WAAW,CAACC,GAAD,EAAKC,KAAL,EAAW;AACpB;AACA,SAAKC,QAAL,CAAc;AACZ,OAACF,GAAD,GAAMC;AADM,KAAd;AAID;;AACDE,EAAAA,OAAO,GAAE;AACP;AACA,UAAMN,OAAO,GAAC;AACZO,MAAAA,EAAE,EAAE,IAAGC,IAAI,CAACC,MAAL,EADK;AAEZL,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBU,KAAnB;AAFK,KAAd,CAFO,CAOP;;AACA,UAAMT,IAAI,GAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAZ,CARO,CASP;;AACAA,IAAAA,IAAI,CAACU,IAAL,CAAUX,OAAV,EAVO,CAWP;;AACA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,IADY;AAEZD,MAAAA,OAAO,EAAC;AAFI,KAAd;AAID;;AACDY,EAAAA,UAAU,CAACL,EAAD,EAAI;AACZ;AACA,UAAMN,IAAI,GAAE,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAZ,CAFY,CAGZ;;AACA,UAAMY,UAAU,GAAGZ,IAAI,CAACa,MAAL,CAAYC,IAAI,IAAEA,IAAI,CAACR,EAAL,KAAWA,EAA7B,CAAnB;AACA,SAAKF,QAAL,CAAc;AAACJ,MAAAA,IAAI,EAACY;AAAN,KAAd;AACD;;AACHG,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,gBAFhB;AAGI,MAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,OAHtB;AAII,MAAA,QAAQ,EAAEiB,CAAC,IAAI,KAAKf,WAAL,CAAiB,SAAjB,EAA4Be,CAAC,CAACC,MAAF,CAASd,KAArC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EASE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,MAAK,KAAKE,OAAL,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,KAAL,CAAWE,IAAX,CAAgBkB,GAAhB,CAAoBJ,IAAI,IAAI;AAC3B,aACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBQ,IAAI,CAACX,KAAxB,EACA;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AACE,QAAA,OAAO,EAAE,MAAK,KAAKQ,UAAL,CAAgBG,IAAI,CAACR,EAArB,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CADF;AASD,KAVA,CADH,CAbF,CADF;AA6BD;;AArEoC;;AAuEvC,eAAeX,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport { isTemplateElement } from '@babel/types';\nclass ToDoList extends React.Component {\n  constructor(props){\n      super(props);\n      this.state= {\n        newItem:\" \",\n        list:[]\n      }\n    }\n    updateInput(key,value){\n      //update react state\n      this.setState({\n        [key]:value\n      });\n\n    }\n    addItem(){\n      //create item with unique id\n      const newItem={\n        id: 1+ Math.random(),\n        value: this.state.newItem.slice()\n      };\n      \n      //copy of current list items\n      const list= [...this.state.list]\n      //add new item to list\n      list.push(newItem);\n      //update state with new list and reset newItem input\n      this.setState({\n        list,\n        newItem:\"\"\n      });\n    }\n    deleteItem(id){\n      //delete item\n      const list= [...this.state.list]\n      //filter out item that being deleted\n      const updateList = list.filter(item=>item.id !==id);\n      this.setState({list:updateList})\n    }\n  render(){\n    return(\n      <div className=\"container\">\n        Add an item..\n        <br/>\n        <input\n            type=\"text\"\n            placeholder=\"Type item here\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n        <button className=\"btn btn-primary\" onClick={()=> this.addItem()}>\n          Add\n        </button>\n        <br/>\n        <ul>\n          {this.state.list.map(item => {\n            return(\n              <li key={item.id}>{item.value}\n              <button className=\"btn btn-danger\"\n                onClick={()=> this.deleteItem(item.id)}\n              >\n                X\n              </button>\n            </li>\n            )\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\nexport default ToDoList;\n"]},"metadata":{},"sourceType":"module"}